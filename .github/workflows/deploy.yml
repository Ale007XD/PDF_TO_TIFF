# Имя воркфлоу, которое будет отображаться в интерфейсе GitHub Actions
name: "CI/CD: Deploy PDF to TIFF Bot"

# Триггеры для запуска воркфлоу
on:
  # Запускать при пуше в ветку 'main'
  push:
    branches:
      - main
  # Позволяет запускать воркфлоу вручную из интерфейса GitHub
  workflow_dispatch:

# Переменные окружения, доступные во всех задачах
env:
  # Имя директории приложения на сервере
  APP_NAME: "pdf-to-tiff-bot"

# Задачи, которые будут выполняться
jobs:
  deploy:
    # Название задачи
    name: "Deploy Bot to Server"
    # Тип виртуальной машины для выполнения задачи
    runs-on: ubuntu-latest

    # Шаги, которые выполняются в рамках задачи
    steps:
      # --- ШАГ 1: Клонирование репозитория ---
      # Этот шаг скачивает код вашего репозитория на виртуальную машину GitHub Actions
      - name: "Checkout repository"
        uses: actions/checkout@v4

      # --- ШАГ 2: Создание .env файла ---
      # Создаем .env файл локально в воркфлоу. Он будет скопирован на сервер на следующем шаге.
      - name: "Create .env file"
        run: |
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
          echo "PUBLIC_BASE_URL=https://yourdomain.com" >> .env
          echo "PUBLISH_DIR=/app/published" >> .env
          echo "TMP_DIR=/app/temp" >> .env
          echo "MAX_FILE_MB=100" >> .env
          echo "GS_PATH=/usr/bin/gs" >> .env
          echo "DPI_DEFAULT=96" >> .env
          echo "CONCURRENCY=2" >> .env

      # --- ШАГ 3: Копирование файлов на сервер ---
      # Используем scp для безопасного копирования всех необходимых файлов
      - name: "Copy files to server"
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "bot.py,pdf_to_tiff.py,utils.py,requirements.txt,Dockerfile,docker-compose.yml,.env"
          target: "~/apps/${{ env.APP_NAME }}"
          strip_components: 1 # Не создавать лишнюю вложенность папок

      # --- ШАГ 4: Развертывание приложения на сервере по SSH ---
      - name: "Deploy application via SSH"
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          # Скрипт, который будет выполнен на вашем сервере
          script: |
            set -e  # Прерывать выполнение при любой ошибке
            
            # Переходим в директорию приложения
            cd ~/apps/${{ env.APP_NAME }}
            
            # 1. Остановка и удаление старых контейнеров (РЕШАЕТ ПРОБЛЕМУ КОНФЛИКТА ИМЕН)
            echo "==> Stopping and removing old containers..."
            docker compose down --remove-orphans
            
            # 2. Пересборка Docker-образа с последними изменениями
            echo "==> Building new Docker image..."
            docker compose build --no-cache
            
            # 3. Запуск нового контейнера в фоновом режиме
            echo "==> Starting new container..."
            docker compose up -d
            
            # 4. Проверка логов для убедительности, что все запустилось
            echo "==> Checking container logs..."
            sleep 5 # Даем боту немного времени на запуск
            docker compose logs --tail=50
            
            echo "✅ Deployment successful!"
