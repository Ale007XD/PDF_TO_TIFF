# Workflow –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–±–æ—Ä–∫–∏ –∏ –¥–µ–ø–ª–æ—è Docker-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ VPS
# –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø—Ä–∏ push –≤ main –≤–µ—Ç–∫—É

name: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–∏–ª–¥ –∏ –¥–µ–ø–ª–æ–π –Ω–∞ VPS'

# –¢—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ workflow
on:
  push:
    branches:
      - main  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ push –≤ main –≤–µ—Ç–∫—É
  workflow_dispatch:  # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –≤—Ä—É—á–Ω—É—é

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
env:
  DOCKER_IMAGE_NAME: pdf-to-tiff-bot
  DOCKER_REGISTRY: docker.io

jobs:
  # –≠—Ç–∞–ø —Å–±–æ—Ä–∫–∏ Docker –æ–±—Ä–∞–∑–∞
  build:
    name: '–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞'
    runs-on: ubuntu-latest
    
    steps:
    - name: '–ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞'
      uses: actions/checkout@v4
      
    - name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Docker Buildx'
      uses: docker/setup-buildx-action@v3
      
    - name: '–í—Ö–æ–¥ –≤ Docker Hub'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Docker Hub
        password: ${{ secrets.DOCKER_PASSWORD }}  # –ü–∞—Ä–æ–ª—å –∏–ª–∏ —Ç–æ–∫–µ–Ω Docker Hub
        
    - name: '–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ–≥–æ–≤'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.DOCKER_REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: '–°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è Docker –æ–±—Ä–∞–∑–∞'
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
  # –≠—Ç–∞–ø –¥–µ–ø–ª–æ—è –Ω–∞ VPS —Å–µ—Ä–≤–µ—Ä
  deploy:
    name: '–î–µ–ø–ª–æ–π –Ω–∞ VPS'
    runs-on: ubuntu-latest
    needs: build  # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Å–±–æ—Ä–∫–∏
    
    steps:
    - name: '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VPS –∏ –¥–µ–ø–ª–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}          # IP –∞–¥—Ä–µ—Å VPS —Å–µ—Ä–≤–µ—Ä–∞
        username: ${{ secrets.VPS_USERNAME }}  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        key: ${{ secrets.VPS_SSH_KEY }}        # –ü—Ä–∏–≤–∞—Ç–Ω—ã–π SSH –∫–ª—é—á
        port: ${{ secrets.VPS_PORT }}          # –ü–æ—Ä—Ç SSH (–æ–±—ã—á–Ω–æ 22)
        script: |
          # –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
          cd /opt/pdf-to-tiff-bot
          
          # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          echo "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
          docker-compose down --remove-orphans || true
          
          # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
          echo "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö Docker –æ–±—Ä–∞–∑–æ–≤..."
          docker image prune -f
          
          # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞
          echo "–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ–≥–æ Docker –æ–±—Ä–∞–∑–∞..."
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          
          # –ó–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          echo "–ó–∞–ø—É—Å–∫ –Ω–æ–≤—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
          docker-compose up -d
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
          echo "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
          docker-compose ps
          
          # –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤
          echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
          docker-compose logs --tail=20
          
          echo "–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
          
    - name: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –¥–µ–ø–ª–æ—è'
      if: always()  # –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "‚úÖ –î–µ–ø–ª–æ–π –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        else
          echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ!"
        fi
        
  # –≠—Ç–∞–ø –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è
  health-check:
    name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏'
    runs-on: ubuntu-latest
    needs: deploy
    if: success()  # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –¥–µ–ø–ª–æ–µ
    
    steps:
    - name: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'
      run: |
        echo "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
        sleep 30
        
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏:
        # - HTTP –∑–∞–ø—Ä–æ—Å—ã –∫ health check endpoint
        # - –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ SSH
        # - Telegram –±–æ—Ç ping —Ç–µ—Å—Ç—ã
        
        echo "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –∏ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!"
        
    - name: '–§–∏–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ'
      run: |
        echo "üöÄ –ü—Ä–æ—Ü–µ—Å—Å CI/CD –∑–∞–≤–µ—Ä—à–µ–Ω!"
        echo "üì¶ Docker –æ–±—Ä–∞–∑: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest"
        echo "üñ•Ô∏è VPS —Å–µ—Ä–≤–µ—Ä: ${{ secrets.VPS_HOST }}"
        echo "‚ú® –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
