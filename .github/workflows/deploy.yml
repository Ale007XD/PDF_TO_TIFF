name: "CI/CD: Debug deploy BOT_TOKEN"

on:
  workflow_dispatch:

env:
  APP_NAME: pdf-to-tiff-bot

jobs:
  debug-deploy:
    name: "DEBUG: Деплой и проверка переменной BOT_TOKEN"
    runs-on: ubuntu-latest
    steps:
      - name: "SSH-деплой с debug-echo"
        uses: appleboy/ssh-action@v1.0.3
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            set -e
            export BOT_TOKEN="${BOT_TOKEN}"
            echo "====== ШАГ 1. Переменная из github actions доступна в ssh: ======"
            echo "DEBUG-echo BOT_TOKEN = $BOT_TOKEN"
            echo "DEBUG-env (printenv | grep BOT_TOKEN) :"
            printenv | grep BOT_TOKEN
            echo "=================================================================="

            APP_DIR="$HOME/apps/${{ env.APP_NAME }}"
            REPO_URL="https://github.com/${{ github.repository }}"

            cd "$APP_DIR"

            docker compose down --remove-orphans || true
            docker rm -f pdf_to_tiff_bot || true

            echo "====== ШАГ 2. docker compose config | grep BOT_TOKEN (отладка): ======"
            BOT_TOKEN="${BOT_TOKEN}" docker compose up -d --remove-orphans
            docker compose config | grep BOT_TOKEN || true
            echo "======================================================================"

            docker compose build --no-cache

            echo "====== ШАГ 3. Сам запуск, переменная передана явно (ГАРАНТИЯ!): ======"
            BOT_TOKEN="${BOT_TOKEN}" docker compose up -d --remove-orphans
            echo "======================================================================"

            docker compose logs --tail=20
