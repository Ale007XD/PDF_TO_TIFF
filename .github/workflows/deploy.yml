name: "CI/CD: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –±–∏–ª–¥ –∏ –¥–µ–ø–ª–æ–π –Ω–∞ VPS"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APP_NAME: pdf-to-tiff-bot

jobs:
  deploy:
    name: "–°–±–æ—Ä–∫–∞ –∏ –¥–µ–ø–ª–æ–π –Ω–∞ VPS"
    runs-on: ubuntu-latest

    steps:
      - name: "SSH-–¥–µ–ø–ª–æ–π –Ω–∞ VPS"
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            set -e

            APP_DIR="$HOME/apps/${{ env.APP_NAME }}"
            REPO_URL="https://github.com/${{ github.repository }}"

            echo "‚è¨ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å GitHub..."
            mkdir -p "$APP_DIR"

            if [ ! -d "$APP_DIR/.git" ]; then
              git clone "$REPO_URL" "$APP_DIR"
            else
              cd "$APP_DIR"
              git fetch origin
              git reset --hard origin/main
            fi

            cd "$APP_DIR"

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ docker –∏ docker compose (v2 - –ø–æ–¥–∫–æ–º–∞–Ω–¥–∞)
            if ! command -v docker >/dev/null 2>&1; then
              echo "‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ VPS. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ."
              exit 1
            fi

            if ! docker compose version >/dev/null 2>&1; then
              echo "‚ùå 'docker compose' –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose v2."
              exit 1
            fi

            echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
            docker compose down --remove-orphans || true

            echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
            docker image prune -f || true

            echo "üî® –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞ –ª–æ–∫–∞–ª—å–Ω–æ –Ω–∞ VPS..."
            docker compose build --no-cache

            echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
            docker compose up -d --remove-orphans

            echo "üìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
            docker compose ps

            echo "üìÑ –õ–æ–≥–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"
            docker compose logs --tail=20

            echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"

  health-check:
    name: "–ü–æ—Å—Ç-–¥–µ–ø–ª–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∞"
    runs-on: ubuntu-latest
    needs: deploy
    if: success()

    steps:
      - name: "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞"
        run: sleep 20

      - name: "Health-check —á–µ—Ä–µ–∑ curl"
        run: |
          echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
          curl -f http://${{ secrets.VPS_HOST }}:8080/health || exit 1
          echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç!"

      - name: "–§–∏–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"
        run: |
          echo "üöÄ CI/CD –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
          echo "üñ•Ô∏è –•–æ—Å—Ç: ${{ secrets.VPS_HOST }}"
          echo "üì¶ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ${{ env.APP_NAME }}"
