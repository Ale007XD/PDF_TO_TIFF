name: "CI/CD: Deploy PDF to TIFF Bot"
on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  APP_NAME: "pdf-to-tiff-bot"
jobs:
  deploy:
    name: "Deploy Bot to Server"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Create .env file"
        run: |
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
          echo "PUBLIC_BASE_URL=https://yourdomain.com" >> .env
          echo "PUBLISH_DIR=/app/published" >> .env
          echo "TMP_DIR=/app/temp" >> .env
          echo "MAX_FILE_MB=100" >> .env
          echo "GS_PATH=/usr/bin/gs" >> .env
          echo "DPI_DEFAULT=96" >> .env
          echo "CONCURRENCY=2" >> .env

      - name: "Copy files to server"
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          source: "bot.py,pdf_to_tiff.py,utils.py,requirements.txt,Dockerfile,docker-compose.yml,.env"
          target: "~/apps/${{ env.APP_NAME }}"
          strip_components: 1

      - name: "Deploy application via SSH"
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          script: |
            set -euxo pipefail

            # На всякий случай удаляем старый контейнер по имени,
            # если он остался в "Exited" или "Created" состоянии
            docker ps -a --filter "name=^/pdf_to_tiff_bot$" --format "{{.ID}}" | xargs -r docker rm -f

            cd ~/apps/${{ env.APP_NAME }}
            # Версия >2 не требует version: в docker-compose.yml. Убираем предупреждение по версии!

            echo "==> Stopping and removing old containers..."
            docker compose down --remove-orphans || true

            echo "==> Building new Docker image..."
            docker compose build --no-cache

            echo "==> Starting new container..."
            docker compose up -d --force-recreate

            echo "==> Checking container logs..."
            sleep 5
            docker compose logs --tail=50

            echo "✅ Deployment successful!"
