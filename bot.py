import asyncio
import os
import uuid
import shutil
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import FSInputFile
from aiogram.fsm.storage.memory import MemoryStorage
from dotenv import load_dotenv
from pdf_to_tiff import process_pdf
from utils import is_safe_filename, get_file_size_mb
from concurrent.futures import ProcessPoolExecutor

# –û—Å–Ω–æ–≤–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
PUBLIC_BASE_URL = os.getenv("PUBLIC_BASE_URL")
PUBLISH_DIR = os.getenv("PUBLISH_DIR")
TMP_DIR = os.getenv("TMP_DIR")
MAX_FILE_MB = int(os.getenv("MAX_FILE_MB", 100))
DPI_DEFAULT = int(os.getenv("DPI_DEFAULT", 96))
GS_PATH = os.getenv("GS_PATH", "/usr/bin/gs")
CONCURRENCY = int(os.getenv("CONCURRENCY", 2))

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(storage=MemoryStorage())
executor = ProcessPoolExecutor(CONCURRENCY)

HELP_TEXT = (
    "–ë–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–Ω–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–µ PDF (CMYK –≤ –∫—Ä–∏–≤—ã—Ö) "
    "–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç TIFF (CMYK+LZW, 96 DPI) –∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ.\n\n"
    "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:\n"
    "- –¢–æ–ª—å–∫–æ –æ–¥–Ω–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–µ PDF\n"
    "- –¢–æ–ª—å–∫–æ CMYK-–∫–æ–Ω—Ç–µ–Ω—Ç\n"
    "- –õ–∏–º–∏—Ç —Ñ–∞–π–ª–∞: 100MB\n"
    "- –ü–æ—Å–ª–µ 14 –¥–Ω–µ–π —Ñ–∞–π–ª —É–¥–∞–ª—è–µ—Ç—Å—è\n\n"
    "–í–Ω–∏–º–∞–Ω–∏–µ!\n"
    "CMYK TIFF –º–æ–∂–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫–∞—Ö (–æ—Å–æ–±–µ–Ω–Ω–æ —Å—Ç–∞—Ä—ã–µ Windows/Preview/Photos). –≠—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã!"
)

START_TEXT = (
    "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–Ω–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π PDF, —è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –µ–≥–æ "
    "–≤ TIFF (CMYK+LZW, 96 DPI) –∏ –¥–∞–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ."
)

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(START_TEXT)

@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer(HELP_TEXT)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–∞–π–ª–æ–≤ PDF
@dp.message(lambda message: message.document is not None)
async def handle_document(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
    if not message.document.file_name.lower().endswith('.pdf'):
        await message.answer("‚ö†Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ PDF —Ñ–∞–π–ª—ã!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    file_size_mb = message.document.file_size / (1024 * 1024)
    if file_size_mb > MAX_FILE_MB:
        await message.answer(f"‚ö†Ô∏è –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç {MAX_FILE_MB}MB!")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    if not is_safe_filename(message.document.file_name):
        await message.answer("‚ö†Ô∏è –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∏–º—è —Ñ–∞–π–ª–∞!")
        return
    
    await message.answer("üìÑ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É PDF...")
    
    # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ —Ñ–∞–π–ª–æ–≤
    unique_id = str(uuid.uuid4())
    safe_filename = f"{unique_id}.pdf"
    pdf_path = os.path.join(TMP_DIR, safe_filename)
    tiff_filename = f"{unique_id}.tiff"
    tiff_path = os.path.join(PUBLISH_DIR, tiff_filename)
    
    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º PDF –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        file_info = await bot.get_file(message.document.file_id)
        await bot.download_file(file_info.file_path, pdf_path)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
        loop = asyncio.get_event_loop()
        result = await loop.run_in_executor(
            executor, 
            process_pdf, 
            pdf_path, 
            tiff_path, 
            DPI_DEFAULT, 
            GS_PATH
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏
        if not result['success']:
            await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏: {result['error']}")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –±—ã–ª —Å–æ–∑–¥–∞–Ω
        if not os.path.exists(tiff_path):
            await message.answer("‚ùå –§–∞–π–ª TIFF –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω!")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–≥–æ —Ñ–∞–π–ª–∞
        tiff_size_mb = get_file_size_mb(tiff_path)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É–±–ª–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É
        download_url = f"{PUBLIC_BASE_URL.rstrip('/')}/{tiff_filename}"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        success_message = (
            f"‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
            f"üìä –†–∞–∑–º–µ—Ä TIFF: {tiff_size_mb:.2f} MB\n"
            f"üîó –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞: {download_url}\n\n"
            f"üí° CMYK TIFF –º–æ–∂–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –æ–±—ã—á–Ω—ã—Ö –ø—Ä–æ—Å–º–æ—Ç—Ä—â–∏–∫–∞—Ö. "
            f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞."
        )
        
        # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç (–µ—Å–ª–∏ —Ä–∞–∑–º–µ—Ä –ø–æ–∑–≤–æ–ª—è–µ—Ç)
        if tiff_size_mb <= 50:  # Telegram –ª–∏–º–∏—Ç 50MB
            try:
                tiff_file = FSInputFile(tiff_path, filename=f"converted_{message.document.file_name[:-4]}.tiff")
                await message.answer_document(tiff_file, caption=success_message)
            except Exception as e:
                # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É
                await message.answer(success_message)
        else:
            # –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è Telegram, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫—É
            await message.answer(success_message)
            
    except Exception as e:
        await message.answer(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
    
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        try:
            if os.path.exists(pdf_path):
                os.remove(pdf_path)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ {pdf_path}: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    required_vars = ["BOT_TOKEN", "PUBLIC_BASE_URL", "PUBLISH_DIR", "TMP_DIR"]
    missing_vars = [var for var in required_vars if not os.getenv(var)]
    
    if missing_vars:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_vars)}")
        exit(1)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    os.makedirs(TMP_DIR, exist_ok=True)
    os.makedirs(PUBLISH_DIR, exist_ok=True)
    
    print(f"üìÅ –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞: {TMP_DIR}")
    print(f"üìÅ –ü–∞–ø–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {PUBLISH_DIR}")
    print(f"üîó –ë–∞–∑–æ–≤—ã–π URL: {PUBLIC_BASE_URL}")
    print(f"üìè –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {MAX_FILE_MB}MB")
    print(f"üñºÔ∏è DPI –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {DPI_DEFAULT}")
    print(f"‚ö° –ü–∞—Ä–∞–ª–ª–µ–ª–∏–∑–º: {CONCURRENCY}")
    
    try:
        asyncio.run(dp.start_polling(bot))
    except KeyboardInterrupt:
        print("\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    finally:
        executor.shutdown(wait=True)
